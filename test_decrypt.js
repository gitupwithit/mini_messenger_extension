const crypto = require('crypto');

// UserA's private key in base64 encoding
const privateKeyBase64 = `MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDEearJT8T13x3j0FzwhdCWoykV+anKpBUg7Wh383oJerGvf9uAIcnu4TTJuialTf6tLoqIjPg86u7sl9jzNqHbQ397TRR8SxdBdED9AnhoGOe0yOYgl2qyS7H8PqSJg4Ui/ng/37gnzfEQ7+16y/ACeftMWLzhuuXXU+O0jGaNMAf89NeD1KR0qGAXweO0aB1Zuudrk5SMZSn0Q4bwYMAnQxRQGa5YgekNAxlNA9SF0tdW+C/hG8tecrFthzmesadUKEMfYfFEwsDz78H5Y6xVRcMJdC1zPOsHNMqUzWUfOZXdIetVC2cMUuo0VD0E8JvNLAcyafh7wMYG1AMYSgmPAgMBAAECggEAWTnRxEOsNGbDmbp+AqMao9ZsKbUslUDn8YCvgU36vYRRXlynz+xIWuo+gWA+/bJKdtachj/S2kNtBtg859MHNV7VbacHJx0o7gpAG0a8bLXmwDS+Qc3R4C+9IEtIiMTIOSisboGIjdcaY7E6PZqRIGbKJ5VjDfZFPAE2dz+NsQ7yu14erIU1vYCXGN18bRXJZsDtRMPCGpG68ZckszacmCrr9JSvK74z9FVew0ATL7gB/bVVxdWgLaklcTnuOZ1M2HuWCYDTOCeTpHPgWAJET7/ZPIvm7iNmMcIO3WYxyFsgL3RP2BU8bgNoYE/EpVhOoftnAu7fBnk9y2OmhMgyBQKBgQD44WMyr9tf7uKBiGDiN5h0emN21Vsx/plru4Xihd05U80ydLUQcCJUJ/iAL4/NIEEYaF8lVvsh6oeLzVNRz7nClRnIEI3euuCl24FQzrwPKoPuY8pPtyt//e1UPg/oYMe4FmHbvnA67JblXGBaIK1s35lUybzbvGWbwtwQktEfkwKBgQDKGID4OexR/ZVrxSVPNIOroy9FW9IUqkbRBG4ybC4Fgn6+tigAGiwjmt9vcKozg+emmdzCp+2YWuGchScA955TxE3UfZGU2s6lmGqMH94bA63y1bFWMWfoKyC965d4wbkEWDAAaXgugAdhm6sXwDFYGb7QTfhEg2J5WI1fRRJTlQKBgQC8hK1JNZ/sONzl1VHdyNL4V8SDvPUJF5tK2Y5+mXuK8wlZkMGeI/I84NIA9wXsEOR+AoEfnZU4iZgGs47LR5ej5qDSxIdSESgdOfnoJdCZhFDPAFO8sjiHCOb+iswt7zEZJgsWElicqZ1bOu/ZFSuIbo6MhQtDPp+QrrdW7n7tdQKBgA7JSi5fNo4tKpCPBRLNedDGCMBfXniKmNHULCfeSGO4z4MumrCfOZmFTFHAAYPxY7KJ0WAgnz6lb5pfF6J3e4sPcs5YPZ2RgMsW4rzL3BlH5KM+xVHUHZEcDrI2mYeJTPsnZKOzE8r7LQ8UL6l2M2YJxC9DdSW2Iy9TrkxJJnUdAoGAaaJV/vTTbo+VHt6Cy2iYbWQGECRVUY5uJmZjIfG4CAwKEqKRey7rhNkX8W5ZlocSPki4GQZc74YRJUyQnlGVSQpVASK0dAjiDuEDnr8SjHcElLvY9IxCNGxTtYeFzQ8ighKmA79t57EcbIv/MfYtLqeZ7JDwM7KoLCWUyoE9bJM=`;

// The encrypted message in base64
const encryptedMessageBase64 = `fL6PIOnALt8L3FvfL/4RueopyaAA0QBx1/5GsOpLlGkJeqXp5/EEk/SQCjWEGiWFnmYJ+VC88Rc9PPkRpm4P7UoAIo8irJgiYP4jTe6bvYMqMiMejmIbK0J8OjwLVix1FUTbHPkyC4I84jT+BD922JuME+sdgBixE/ez4O5kWtOeBPRrUkZUPDbSdyo1Rpj0QSae7qNt9FGSoZHOVZIoosr+BvsplkCcSfL6SgL4h2u3flyhdAFSejOzYugYeX36zQriuqk6KqwbvhOsMjbriKRbOsIjXUgGjfg119pOlae4AGZuGJo0Jg8MoydegNT4O9AUV8I5Tymd4Ur/k1HsVg==`;

// Convert base64 encoded private key and encrypted message to a buffer
const privateKey = Buffer.from(privateKeyBase64, 'base64').toString();
const encryptedMessage = Buffer.from(encryptedMessageBase64, 'base64');

// Decrypt the message
const decryptedMessage = crypto.privateDecrypt(
  {
    key: privateKey,
    padding: crypto.constants.RSA_PKCS1_OAEP_PADDING,
    oaepHash: "sha256",
  },
  encryptedMessage
);

console.log(decryptedMessage.toString()); // This will log the decrypted message
